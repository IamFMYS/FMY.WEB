<?xml version="1.0" encoding="utf-8" ?>
<sqlMapConfig xmlns="http://ibatis.apache.org/dataMapper"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <!--properties ：配置一些常量属性，如：<property key="useStatementNamespaces" value="false"/>。
  如果这些属性有很多的话可以单独写一个文件里面，
  再通过resource（或url, embedded分别是引用url和编译在程序中的资源文件）属性引用进来 三种引入说明见底部-->
  <!--<properties embedded="database.config, IBatisNetDemo"/>-->
  <properties resource="Config/FMY.WEB.IbatisDao.Properties.config"/>

  <settings>
    <setting useStatementNamespaces="true" />
    <!--是否使用语句命名空间，这里的命名空间指的是映射文件中sqlMap节点的namespace属性。-->
    <setting cacheModelsEnabled="true" />
    <!--配置是否启用iBatis的缓存机制，默认是"true"。-->
    <setting validateSqlMap="false" />
    <!--配置是否启用SqlMapConfig.xsd schema验证映射文件，默认是"false"。-->
  </settings>

  <!--用于提供数据库驱动配置文件的文件名和路径-->
  <!--<providers resource="Providers.config"/>-->
  <providers embedded="providers.config,FMY.WEB.IbatisDao"/>

  <database>
    <!--1.如果在providers.config文件中指定了默认的数据库驱动，那么provider节点就不需要设置了，
          它的作用是在换数据库驱动时不需要修改providers.config文件。
        2.datasource节点用于指定ADO.NET Connection String.-->
    <provider name="sqlServer2.0" />
    <dataSource name="SalesData" connectionString="Data Source=${DataSource};Initial Catalog=${DataBase};User Id=${UserId};PassWord=${PassWord};Persist Security Info=true;"/>
    <!--
    integrated security=true 的意思是集成验证，也就是说使用Windows验证的方式去连接到数据库服务器。这样方式的好处是不需要在连接字符串中编写用户名和密码，从一定程度上说提高了安全性。
    Persist Security Info属性的意思是表示是否保存安全信息，其实可以简单的理解为"ADO在数据库连接成功后是否保存密码信息"
    -->
  </database>

  <sqlMaps>
    <sqlMap embedded="${Root}.User.xml, ${Assembly}" />
    <sqlMap embedded="${Root}.UserRegistEmail.xml, ${Assembly}" />
  </sqlMaps>
  
</sqlMapConfig>





<!--
凡涉及到引用外部文件的都可以通过以上resource，url，embedded 三种方式实现。

resource
指定数据驱动配置文件从项目的根目录进行加载，如resource="providers.config"

url
指定数据驱动配置文件从文件的绝对路径进行加载，
如url="c:\IBatis\Resources\providers.config"-或者-url="file://c:\IBatis\Resources\providers.config"

embedded
指定数据驱动配置文件可以作为程序集的资源文件进行加载，如embedded="Resources.providers.config, MyApp.Data"-->